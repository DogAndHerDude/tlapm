name: Build and Package TLA Proof Manager
on:
    pull_request:
    push:
        paths:
            - '.github/workflows/pr.yml'
    schedule:
        - cron: '42 5 20 * *'
jobs:
    test:
        name: Build and Test
        runs-on: ${{ matrix.operating-system }}
        strategy:
            fail-fast: false
            matrix:
                operating-system: [
                    macos-latest,
                    ubuntu-latest]
                ocaml-compiler: [
                    '0',
                    '1',
                    '2',
                    ]
        steps:
            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                python-version: '3.10'
            - uses: actions/checkout@v2
            - name: Get OCaml version
              run: |
                INDEX=${{ matrix.ocaml-compiler }}
                OCAML_VERSION=\
                `python .github/workflows/ocaml_versions.py $INDEX`
                echo "OCAML_VERSION=$OCAML_VERSION" \
                >> $GITHUB_ENV
                echo "OCAML_VERSION = $OCAML_VERSION"
            - uses: ocaml/setup-ocaml@v2
              with:
                ocaml-compiler: ${{ env.OCAML_VERSION }}
            - name: Define TLAPS-related env vars
              run: |
                python .github/workflows/setup_shell_env.py \
                    >> $GITHUB_ENV
            - uses: actions/cache@v2
              id: cache
              with:
                path: ${{ env.DOWNLOADS }}
                key: ${{ env.DOWNLOADS }}
            - name: Build installer of TLAPS
              run: |
                eval $(opam env)
                ./configure
                cd tools/installer
                ./tlaps-release.sh
            - name: Run installer of TLAPS
              run: |
                cd tools/installer
                ./${{ env.INSTALLER }} -d ../..
            - name: Install dependencies for testing
              run: |
                opam install kaputt
            - name: Run a subset of `tlapm` tests
              run: |
                eval $(opam env)
                PATH=$(pwd)/bin:$(pwd)/lib/tlaps/bin:$PATH make test
            - name: Run all `tlapm` tests
              run: |
                eval $(opam env)
                make
                PATH=$(pwd)/bin:$(pwd)/lib/tlaps/bin:$PATH make testall
            - name: Print Test Results
              if: matrix.operating-system == 'ubuntu-latest'
              run: |
                cat test/tests.log
